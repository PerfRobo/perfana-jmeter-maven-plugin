<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.5 on 2018-10-30 -->

<plugin>
  <name>perfana-jmeter-maven-plugin</name>
  <description>Forked from jmeter-maven-plugin, with perfana integration.</description>
  <groupId>io.perfana</groupId>
  <artifactId>perfana-jmeter-maven-plugin</artifactId>
  <version>1.0.0</version>
  <goalPrefix>perfana-jmeter</goalPrefix>
  <mojos>
    <mojo>
      <goal>configure</goal>
      <description>Goal that configures Apache JMeter bundle.
This goal is also called by other goals.
This goal runs within Lifecycle phase LifecyclePhase.COMPILE.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>compile</phase>
      <implementation>com.lazerycode.jmeter.mojo.ConfigureJMeterMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>annotations</name>
          <alias>ann</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: test run annotiations passed via environment variable</description>
        </parameter>
        <parameter>
          <name>appendResultsTimestamp</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Append the results timestamp to the filename (It will be prepended by default if testResultsTimestamp is set to true)</description>
        </parameter>
        <parameter>
          <name>application</name>
          <alias>ap</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: Name of application that is being tested.</description>
        </parameter>
        <parameter>
          <name>applicationRelease</name>
          <alias>pr</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: the release number of the application.</description>
        </parameter>
        <parameter>
          <name>assertResultsEnabled</name>
          <alias>ar</alias>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: Parse the Perfana test asserts and fail build it not ok.</description>
        </parameter>
        <parameter>
          <name>CIBuildResultsUrl</name>
          <alias>url</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: Build results url where to find the results of this load test.</description>
        </parameter>
        <parameter>
          <name>confFilesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path under which .conf files are stored.</description>
        </parameter>
        <parameter>
          <name>constantLoadTimeInSeconds</name>
          <alias>pd</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: Constan load time in seconds.</description>
        </parameter>
        <parameter>
          <name>customPropertiesFiles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Absolute path to JMeter custom (test dependent) properties file.</description>
        </parameter>
        <parameter>
          <name>downloadExtensionDependencies</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Download all dependencies of files you want to add to lib/ext and copy them to lib/ext too &lt;downloadExtensionDependencies&gt;   &lt;true&gt; &lt;downloadExtensionDependencies&gt;</description>
        </parameter>
        <parameter>
          <name>downloadJMeterDependencies</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Download all transitive dependencies of the JMeter artifacts. &lt;downloadJMeterDependencies&gt;   &lt;false&gt; &lt;downloadJMeterDependencies&gt;</description>
        </parameter>
        <parameter>
          <name>downloadLibraryDependencies</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Download all dependencies of files you want to add to lib/junit and copy them to lib/junit too &lt;downloadLibraryDependencies&gt;   &lt;true&gt; &lt;downloadLibraryDependencies&gt;</description>
        </parameter>
        <parameter>
          <name>downloadOptionalDependencies</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Download all optional transitive dependencies of artifacts. &lt;downloadOptionalDependencies&gt;   &lt;true&gt; &lt;downloadOptionalDependencies&gt;</description>
        </parameter>
        <parameter>
          <name>excludedArtifacts</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of artifacts to exclude. You can supply your own list of artifacts This is useful if you want to exclude broken or invalid dependencies &lt;excludedArtifacts&gt; &lt;exclusion&gt;commons-pool2:commons-pool2&lt;/exclusion&gt; &lt;exclusion&gt;commons-math3:commons-math3&lt;/exclusion&gt; &lt;excludedArtifacts&gt;</description>
        </parameter>
        <parameter>
          <name>generateReports</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate JMeter Reports (this will force your .jtl&apos;s into .csv mode)</description>
        </parameter>
        <parameter>
          <name>ignoredArtifacts</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of artifacts that the plugin should ignore. This would be useful if you don&apos;t want specific dependencies brought down by JMeter (or any used defined artifacts) copied into the JMeter directory structure. &lt;ignoredArtifacts&gt;   &lt;artifact&gt;org.bouncycastle:bcprov-jdk15on:1.49&lt;/artifact&gt; &lt;ignoredArtifacts&gt;</description>
        </parameter>
        <parameter>
          <name>jmeterArtifacts</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of artifacts that we use to configure JMeter. This list is hard coded by default, you can override this list and supply your own list of artifacts for JMeter. This would be useful if you want to use a different version of JMeter that has a different list of required artifacts. &lt;jmeterArtifacts&gt;   &lt;artifact&gt;kg.apc:jmeter-plugins:1.3.1&lt;/artifact&gt; &lt;jmeterArtifacts&gt;</description>
        </parameter>
        <parameter>
          <name>jmeterDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Place where the JMeter files will be generated.</description>
        </parameter>
        <parameter>
          <name>jmeterExtensions</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of artifacts that should be copied into the lib/ext directory e.g. &lt;jmeterExtensions&gt;   &lt;artifact&gt;kg.apc:jmeter-plugins:1.3.1&lt;/artifact&gt; &lt;jmeterExtensions&gt;</description>
        </parameter>
        <parameter>
          <name>jMeterProcessJVMSettings</name>
          <type>com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all JMeter Process JVM settings.</description>
        </parameter>
        <parameter>
          <name>jmeterVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The version of JMeter that this plugin will use to run tests. We use a hard coded list of artifacts to configure JMeter locally, if you change this version number the list of artifacts required to run JMeter may change. If this happens you will need to override the &lt;jmeterArtifacts&gt; element.</description>
        </parameter>
        <parameter>
          <name>junitLibraries</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of artifacts that should be copied into the lib/junit directory e.g. &lt;junitLibraries&gt;   &lt;artifact&gt;com.foo.project.junit:junit-test:1.0.0&lt;/artifact&gt; &lt;junitLibraries&gt;</description>
        </parameter>
        <parameter>
          <name>logsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter logs are saved to.</description>
        </parameter>
        <parameter>
          <name>overrideRootLogLevel</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set a root log level to override all log levels used by JMeter Valid log levels are: ERROR, WARN, INFO, DEBUG (They are not case sensitive); If you try to set an invalid log level it will be ignored</description>
        </parameter>
        <parameter>
          <name>perfanaEnabled</name>
          <alias>tie</alias>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: Enable calls to Perfana.</description>
        </parameter>
        <parameter>
          <name>perfanaUrl</name>
          <alias>iourl</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: Perfana url.</description>
        </parameter>
        <parameter>
          <name>postTestPauseInSeconds</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set a pause in seconds after each test that is run.</description>
        </parameter>
        <parameter>
          <name>projectBuildDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>propertiesFilesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path under which .properties files are stored. Defaults to ${basedir}/src/test/jmeter</description>
        </parameter>
        <parameter>
          <name>propertiesGlobal</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>JMeter Global Properties that override those given in jmeterProps.
This sets local and remote properties (JMeter&apos;s definition of global properties is actually remote properties) and overrides any local/remote properties already set</description>
        </parameter>
        <parameter>
          <name>propertiesJMeter</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>Absolute path to JMeter custom (test dependent) properties file.</description>
        </parameter>
        <parameter>
          <name>propertiesReplacedByCustomFiles</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Replace the default JMeter properties with any custom properties files supplied. (If set to false any custom properties files will be merged with the default JMeter properties files, custom properties will overwrite default ones)</description>
        </parameter>
        <parameter>
          <name>propertiesReportGenerator</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>JMeter Properties that are merged with precedence into default JMeter file in reportgenerator.properties</description>
        </parameter>
        <parameter>
          <name>propertiesSaveService</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>JMeter Properties that are merged with precedence into default JMeter file in saveservice.properties</description>
        </parameter>
        <parameter>
          <name>propertiesSystem</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>(Java) System properties set for the test run. Properties are merged with precedence into default JMeter file system.properties</description>
        </parameter>
        <parameter>
          <name>propertiesUpgrade</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>JMeter Properties that are merged with precedence into default JMeter file in upgrade.properties</description>
        </parameter>
        <parameter>
          <name>propertiesUser</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>JMeter Properties that are merged with precedence into default JMeter file in user.properties user.properties takes precedence over jmeter.properties</description>
        </parameter>
        <parameter>
          <name>proxyConfig</name>
          <type>com.lazerycode.jmeter.configuration.ProxyConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all proxy configurations.</description>
        </parameter>
        <parameter>
          <name>rampupTimeInSeconds</name>
          <alias>rt</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: Rampup time in seconds.</description>
        </parameter>
        <parameter>
          <name>remoteConfig</name>
          <type>com.lazerycode.jmeter.configuration.RemoteConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all remote configurations.</description>
        </parameter>
        <parameter>
          <name>reportDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter reports are saved to.</description>
        </parameter>
        <parameter>
          <name>resultsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter results are saved to.</description>
        </parameter>
        <parameter>
          <name>resultsFileFormat</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the format of the results generated by JMeter Valid values are: xml, csv (CSV set by default).</description>
        </parameter>
        <parameter>
          <name>resultsFileNameDateFormat</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the format of the timestamp that is appended to the results filename. (This assumes that testResultsTimestamp is set to &apos;true&apos;) For formatting see http://joda-time.sourceforge.net/apidocs/org/joda/time/format/DateTimeFormat.html</description>
        </parameter>
        <parameter>
          <name>skipTests</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Skip the JMeter tests</description>
        </parameter>
        <parameter>
          <name>suppressJMeterOutput</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Suppress JMeter output</description>
        </parameter>
        <parameter>
          <name>testConfigFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The filename used to store the results config</description>
        </parameter>
        <parameter>
          <name>testEnvironment</name>
          <alias>te</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: Test environment for this test.</description>
        </parameter>
        <parameter>
          <name>testFilesBuildDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter test files are copied into as part of the build.</description>
        </parameter>
        <parameter>
          <name>testFilesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path under which JMX files are stored.</description>
        </parameter>
        <parameter>
          <name>testFilesExcluded</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the list of exclude patterns to use in directory scan for JMX files. Relative to testFilesDirectory.</description>
        </parameter>
        <parameter>
          <name>testFilesIncluded</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the list of include patterns to use in directory scan for JMX files. Relative to testFilesDirectory.</description>
        </parameter>
        <parameter>
          <name>testPlanLibraries</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of artifacts that are used by the test like JMS activemq. In a Non Maven JMeter configuration, these libraries would be copied into the lib/ directory The maven plugin will copy those in lib/ folder of the built jmeter configuration e.g. &lt;testPlanLibraries&gt;   &lt;artifact&gt;org.apache.activemq:activemq-client:5.15.2&lt;/artifact&gt; &lt;junitLibraries&gt;</description>
        </parameter>
        <parameter>
          <name>testResultsTimestamp</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Timestamp the test results.</description>
        </parameter>
        <parameter>
          <name>testRunId</name>
          <alias>tid</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: Test run id.</description>
        </parameter>
        <parameter>
          <name>testType</name>
          <alias>tt</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: Test type for this test.</description>
        </parameter>
        <parameter>
          <name>useMavenProxy</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use maven proxy configuration if no specific proxy configuration provided</description>
        </parameter>
        <parameter>
          <name>variables</name>
          <type>java.util.Properties</type>
          <required>false</required>
          <editable>true</editable>
          <description>Perfana: test run variables passed via environment variable</description>
        </parameter>
      </parameters>
      <configuration>
        <annotations implementation="java.lang.String" default-value="">${jmeter.annotations}</annotations>
        <appendResultsTimestamp implementation="boolean" default-value="false"/>
        <application implementation="java.lang.String" default-value="UNKNOWN_APPLICATION">${jmeter.application}</application>
        <applicationRelease implementation="java.lang.String" default-value="">${jmeter.applicationRelease}</applicationRelease>
        <assertResultsEnabled implementation="boolean" default-value="false">${jmeter.assertResultsEnabled}</assertResultsEnabled>
        <CIBuildResultsUrl implementation="java.lang.String" default-value="">${jmeter.CIBuildResultsUrl}</CIBuildResultsUrl>
        <confFilesDirectory implementation="java.io.File" default-value="${basedir}/src/test/conf"/>
        <constantLoadTimeInSeconds implementation="java.lang.String" default-value="">${jmeter.constantLoadTimeInSeconds}</constantLoadTimeInSeconds>
        <downloadExtensionDependencies implementation="boolean" default-value="true"/>
        <downloadJMeterDependencies implementation="boolean" default-value="false"/>
        <downloadLibraryDependencies implementation="boolean" default-value="true"/>
        <downloadOptionalDependencies implementation="boolean" default-value="false"/>
        <generateReports implementation="boolean" default-value="true"/>
        <jmeterDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter"/>
        <jmeterVersion implementation="java.lang.String" default-value="5.0"/>
        <logsDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/logs"/>
        <perfanaEnabled implementation="boolean" default-value="false">${jmeter.perfanaEnabled}</perfanaEnabled>
        <perfanaUrl implementation="java.lang.String" default-value="UNKNOWN_PERFANA_URL">${jmeter.perfanaUrl}</perfanaUrl>
        <postTestPauseInSeconds implementation="java.lang.String" default-value="0"/>
        <projectBuildDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <propertiesFilesDirectory implementation="java.io.File" default-value="${basedir}/src/test/jmeter"/>
        <propertiesReplacedByCustomFiles implementation="boolean" default-value="true"/>
        <rampupTimeInSeconds implementation="java.lang.String" default-value="">${jmeter.rampupTimeInSeconds}</rampupTimeInSeconds>
        <reportDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/reports"/>
        <resultsDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/results"/>
        <resultsFileFormat implementation="java.lang.String" default-value="csv"/>
        <skipTests implementation="boolean" default-value="${skipTests}"/>
        <suppressJMeterOutput implementation="boolean" default-value="false"/>
        <testConfigFile implementation="java.lang.String" default-value="${project.build.directory}/config.json"/>
        <testEnvironment implementation="java.lang.String" default-value="UNKNOWN_TEST_ENVIRONMENT">${jmeter.testEnvironment}</testEnvironment>
        <testFilesBuildDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/testFiles"/>
        <testFilesDirectory implementation="java.io.File" default-value="${basedir}/src/test/jmeter"/>
        <testResultsTimestamp implementation="boolean" default-value="true"/>
        <testRunId implementation="java.lang.String" default-value="UNKNOWN_TEST_RUN_ID">${jmeter.testRunId}</testRunId>
        <testType implementation="java.lang.String" default-value="UNKNOWN_TEST_TYPE">${jmeter.testType}</testType>
        <variables implementation="java.util.Properties">${jmeter.variables}</variables>
      </configuration>
    </mojo>
    <mojo>
      <goal>gui</goal>
      <description>Goal that runs JMeter in GUI mode.
This goal runs within Lifecycle phase LifecyclePhase.TEST.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>test</phase>
      <executeGoal>configure</executeGoal>
      <implementation>com.lazerycode.jmeter.mojo.RunJMeterGUIMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>appendResultsTimestamp</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Append the results timestamp to the filename (It will be prepended by default if testResultsTimestamp is set to true)</description>
        </parameter>
        <parameter>
          <name>confFilesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path under which .conf files are stored.</description>
        </parameter>
        <parameter>
          <name>customPropertiesFiles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Absolute path to JMeter custom (test dependent) properties file.</description>
        </parameter>
        <parameter>
          <name>generateReports</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate JMeter Reports (this will force your .jtl&apos;s into .csv mode)</description>
        </parameter>
        <parameter>
          <name>guiTestFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Supply a test file to open in the GUI once it is loaded.</description>
        </parameter>
        <parameter>
          <name>jmeterDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Place where the JMeter files will be generated.</description>
        </parameter>
        <parameter>
          <name>jMeterProcessJVMSettings</name>
          <type>com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all JMeter Process JVM settings.</description>
        </parameter>
        <parameter>
          <name>logsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter logs are saved to.</description>
        </parameter>
        <parameter>
          <name>overrideRootLogLevel</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set a root log level to override all log levels used by JMeter Valid log levels are: ERROR, WARN, INFO, DEBUG (They are not case sensitive); If you try to set an invalid log level it will be ignored</description>
        </parameter>
        <parameter>
          <name>postTestPauseInSeconds</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set a pause in seconds after each test that is run.</description>
        </parameter>
        <parameter>
          <name>projectBuildDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>proxyConfig</name>
          <type>com.lazerycode.jmeter.configuration.ProxyConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all proxy configurations.</description>
        </parameter>
        <parameter>
          <name>remoteConfig</name>
          <type>com.lazerycode.jmeter.configuration.RemoteConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all remote configurations.</description>
        </parameter>
        <parameter>
          <name>reportDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter reports are saved to.</description>
        </parameter>
        <parameter>
          <name>resultsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter results are saved to.</description>
        </parameter>
        <parameter>
          <name>resultsFileNameDateFormat</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the format of the timestamp that is appended to the results filename. (This assumes that testResultsTimestamp is set to &apos;true&apos;) For formatting see http://joda-time.sourceforge.net/apidocs/org/joda/time/format/DateTimeFormat.html</description>
        </parameter>
        <parameter>
          <name>runInBackground</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>skipTests</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Skip the JMeter tests</description>
        </parameter>
        <parameter>
          <name>suppressJMeterOutput</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Suppress JMeter output</description>
        </parameter>
        <parameter>
          <name>testConfigFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The filename used to store the results config</description>
        </parameter>
        <parameter>
          <name>testFilesBuildDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter test files are copied into as part of the build.</description>
        </parameter>
        <parameter>
          <name>testFilesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path under which JMX files are stored.</description>
        </parameter>
        <parameter>
          <name>testFilesExcluded</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the list of exclude patterns to use in directory scan for JMX files. Relative to testFilesDirectory.</description>
        </parameter>
        <parameter>
          <name>testFilesIncluded</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the list of include patterns to use in directory scan for JMX files. Relative to testFilesDirectory.</description>
        </parameter>
        <parameter>
          <name>testResultsTimestamp</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Timestamp the test results.</description>
        </parameter>
        <parameter>
          <name>useMavenProxy</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use maven proxy configuration if no specific proxy configuration provided</description>
        </parameter>
      </parameters>
      <configuration>
        <appendResultsTimestamp implementation="boolean" default-value="false"/>
        <confFilesDirectory implementation="java.io.File" default-value="${basedir}/src/test/conf"/>
        <generateReports implementation="boolean" default-value="true"/>
        <jmeterDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter"/>
        <logsDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/logs"/>
        <postTestPauseInSeconds implementation="java.lang.String" default-value="0"/>
        <projectBuildDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <reportDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/reports"/>
        <resultsDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/results"/>
        <runInBackground implementation="boolean" default-value="false"/>
        <skipTests implementation="boolean" default-value="${skipTests}"/>
        <suppressJMeterOutput implementation="boolean" default-value="false"/>
        <testConfigFile implementation="java.lang.String" default-value="${project.build.directory}/config.json"/>
        <testFilesBuildDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/testFiles"/>
        <testFilesDirectory implementation="java.io.File" default-value="${basedir}/src/test/jmeter"/>
        <testResultsTimestamp implementation="boolean" default-value="true"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on perfana-jmeter-maven-plugin.
Call mvn perfana-jmeter:help -Ddetail=true -Dgoal=&lt;goal-name&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.lazerycode.jmeter.mojo.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If true, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>jmeter</goal>
      <description>Goal that runs jmeter based on configuration defined in your pom.
This goal runs within Lifecycle phase LifecyclePhase.INTEGRATION_TEST.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>integration-test</phase>
      <executeGoal>configure</executeGoal>
      <implementation>com.lazerycode.jmeter.mojo.RunJMeterMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>appendResultsTimestamp</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Append the results timestamp to the filename (It will be prepended by default if testResultsTimestamp is set to true)</description>
        </parameter>
        <parameter>
          <name>confFilesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path under which .conf files are stored.</description>
        </parameter>
        <parameter>
          <name>customPropertiesFiles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Absolute path to JMeter custom (test dependent) properties file.</description>
        </parameter>
        <parameter>
          <name>generateReports</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate JMeter Reports (this will force your .jtl&apos;s into .csv mode)</description>
        </parameter>
        <parameter>
          <name>jmeterDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Place where the JMeter files will be generated.</description>
        </parameter>
        <parameter>
          <name>jMeterProcessJVMSettings</name>
          <type>com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all JMeter Process JVM settings.</description>
        </parameter>
        <parameter>
          <name>logsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter logs are saved to.</description>
        </parameter>
        <parameter>
          <name>overrideRootLogLevel</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set a root log level to override all log levels used by JMeter Valid log levels are: ERROR, WARN, INFO, DEBUG (They are not case sensitive); If you try to set an invalid log level it will be ignored</description>
        </parameter>
        <parameter>
          <name>postTestPauseInSeconds</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set a pause in seconds after each test that is run.</description>
        </parameter>
        <parameter>
          <name>projectBuildDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>proxyConfig</name>
          <type>com.lazerycode.jmeter.configuration.ProxyConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all proxy configurations.</description>
        </parameter>
        <parameter>
          <name>remoteConfig</name>
          <type>com.lazerycode.jmeter.configuration.RemoteConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all remote configurations.</description>
        </parameter>
        <parameter>
          <name>reportDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter reports are saved to.</description>
        </parameter>
        <parameter>
          <name>resultsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter results are saved to.</description>
        </parameter>
        <parameter>
          <name>resultsFileNameDateFormat</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the format of the timestamp that is appended to the results filename. (This assumes that testResultsTimestamp is set to &apos;true&apos;) For formatting see http://joda-time.sourceforge.net/apidocs/org/joda/time/format/DateTimeFormat.html</description>
        </parameter>
        <parameter>
          <name>skipTests</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Skip the JMeter tests</description>
        </parameter>
        <parameter>
          <name>suppressJMeterOutput</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Suppress JMeter output</description>
        </parameter>
        <parameter>
          <name>testConfigFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The filename used to store the results config</description>
        </parameter>
        <parameter>
          <name>testFilesBuildDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter test files are copied into as part of the build.</description>
        </parameter>
        <parameter>
          <name>testFilesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path under which JMX files are stored.</description>
        </parameter>
        <parameter>
          <name>testFilesExcluded</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the list of exclude patterns to use in directory scan for JMX files. Relative to testFilesDirectory.</description>
        </parameter>
        <parameter>
          <name>testFilesIncluded</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the list of include patterns to use in directory scan for JMX files. Relative to testFilesDirectory.</description>
        </parameter>
        <parameter>
          <name>testResultsTimestamp</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Timestamp the test results.</description>
        </parameter>
        <parameter>
          <name>useMavenProxy</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use maven proxy configuration if no specific proxy configuration provided</description>
        </parameter>
      </parameters>
      <configuration>
        <appendResultsTimestamp implementation="boolean" default-value="false"/>
        <confFilesDirectory implementation="java.io.File" default-value="${basedir}/src/test/conf"/>
        <generateReports implementation="boolean" default-value="true"/>
        <jmeterDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter"/>
        <logsDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/logs"/>
        <postTestPauseInSeconds implementation="java.lang.String" default-value="0"/>
        <projectBuildDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <reportDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/reports"/>
        <resultsDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/results"/>
        <skipTests implementation="boolean" default-value="${skipTests}"/>
        <suppressJMeterOutput implementation="boolean" default-value="false"/>
        <testConfigFile implementation="java.lang.String" default-value="${project.build.directory}/config.json"/>
        <testFilesBuildDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/testFiles"/>
        <testFilesDirectory implementation="java.io.File" default-value="${basedir}/src/test/jmeter"/>
        <testResultsTimestamp implementation="boolean" default-value="true"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>remote-server</goal>
      <description>Goal that runs JMeter in server mode.
This goal runs within Lifecycle phase LifecyclePhase.TEST.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>test</phase>
      <executeGoal>configure</executeGoal>
      <implementation>com.lazerycode.jmeter.mojo.RunJMeterServer</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.5.0</since>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>appendResultsTimestamp</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Append the results timestamp to the filename (It will be prepended by default if testResultsTimestamp is set to true)</description>
        </parameter>
        <parameter>
          <name>confFilesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path under which .conf files are stored.</description>
        </parameter>
        <parameter>
          <name>customPropertiesFiles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Absolute path to JMeter custom (test dependent) properties file.</description>
        </parameter>
        <parameter>
          <name>exportedRmiHostname</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Exported RMI host name</description>
        </parameter>
        <parameter>
          <name>generateReports</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate JMeter Reports (this will force your .jtl&apos;s into .csv mode)</description>
        </parameter>
        <parameter>
          <name>jmeterDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Place where the JMeter files will be generated.</description>
        </parameter>
        <parameter>
          <name>jMeterProcessJVMSettings</name>
          <type>com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all JMeter Process JVM settings.</description>
        </parameter>
        <parameter>
          <name>logsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter logs are saved to.</description>
        </parameter>
        <parameter>
          <name>overrideRootLogLevel</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set a root log level to override all log levels used by JMeter Valid log levels are: ERROR, WARN, INFO, DEBUG (They are not case sensitive); If you try to set an invalid log level it will be ignored</description>
        </parameter>
        <parameter>
          <name>postTestPauseInSeconds</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set a pause in seconds after each test that is run.</description>
        </parameter>
        <parameter>
          <name>projectBuildDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>proxyConfig</name>
          <type>com.lazerycode.jmeter.configuration.ProxyConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all proxy configurations.</description>
        </parameter>
        <parameter>
          <name>remoteConfig</name>
          <type>com.lazerycode.jmeter.configuration.RemoteConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all remote configurations.</description>
        </parameter>
        <parameter>
          <name>reportDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter reports are saved to.</description>
        </parameter>
        <parameter>
          <name>resultsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter results are saved to.</description>
        </parameter>
        <parameter>
          <name>resultsFileNameDateFormat</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the format of the timestamp that is appended to the results filename. (This assumes that testResultsTimestamp is set to &apos;true&apos;) For formatting see http://joda-time.sourceforge.net/apidocs/org/joda/time/format/DateTimeFormat.html</description>
        </parameter>
        <parameter>
          <name>runInBackground</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>serverPort</name>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Port to listen on</description>
        </parameter>
        <parameter>
          <name>skipTests</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Skip the JMeter tests</description>
        </parameter>
        <parameter>
          <name>suppressJMeterOutput</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Suppress JMeter output</description>
        </parameter>
        <parameter>
          <name>testConfigFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The filename used to store the results config</description>
        </parameter>
        <parameter>
          <name>testFilesBuildDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter test files are copied into as part of the build.</description>
        </parameter>
        <parameter>
          <name>testFilesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path under which JMX files are stored.</description>
        </parameter>
        <parameter>
          <name>testFilesExcluded</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the list of exclude patterns to use in directory scan for JMX files. Relative to testFilesDirectory.</description>
        </parameter>
        <parameter>
          <name>testFilesIncluded</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the list of include patterns to use in directory scan for JMX files. Relative to testFilesDirectory.</description>
        </parameter>
        <parameter>
          <name>testResultsTimestamp</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Timestamp the test results.</description>
        </parameter>
        <parameter>
          <name>useMavenProxy</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use maven proxy configuration if no specific proxy configuration provided</description>
        </parameter>
      </parameters>
      <configuration>
        <appendResultsTimestamp implementation="boolean" default-value="false"/>
        <confFilesDirectory implementation="java.io.File" default-value="${basedir}/src/test/conf"/>
        <generateReports implementation="boolean" default-value="true"/>
        <jmeterDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter"/>
        <logsDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/logs"/>
        <postTestPauseInSeconds implementation="java.lang.String" default-value="0"/>
        <projectBuildDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <reportDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/reports"/>
        <resultsDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/results"/>
        <runInBackground implementation="boolean" default-value="false"/>
        <skipTests implementation="boolean" default-value="${skipTests}"/>
        <suppressJMeterOutput implementation="boolean" default-value="false"/>
        <testConfigFile implementation="java.lang.String" default-value="${project.build.directory}/config.json"/>
        <testFilesBuildDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/testFiles"/>
        <testFilesDirectory implementation="java.io.File" default-value="${basedir}/src/test/jmeter"/>
        <testResultsTimestamp implementation="boolean" default-value="true"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>results</goal>
      <description>Goal that computes successes/failures from CSV or XML results files.
This goal runs within Lifecycle phase LifecyclePhase.VERIFY.
Ensure you set &apos;scanResultsForSuccessfulRequests&apos; and &apos;scanResultsForFailedRequests&apos; to true.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>verify</phase>
      <implementation>com.lazerycode.jmeter.mojo.CheckResultsMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>appendResultsTimestamp</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Append the results timestamp to the filename (It will be prepended by default if testResultsTimestamp is set to true)</description>
        </parameter>
        <parameter>
          <name>confFilesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path under which .conf files are stored.</description>
        </parameter>
        <parameter>
          <name>customPropertiesFiles</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Absolute path to JMeter custom (test dependent) properties file.</description>
        </parameter>
        <parameter>
          <name>generateReports</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate JMeter Reports (this will force your .jtl&apos;s into .csv mode)</description>
        </parameter>
        <parameter>
          <name>ignoreResultFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets whether build should fail if there are failed requests found in the JMeter result file. Failures are for example failed requests</description>
        </parameter>
        <parameter>
          <name>jmeterDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Place where the JMeter files will be generated.</description>
        </parameter>
        <parameter>
          <name>jMeterProcessJVMSettings</name>
          <type>com.lazerycode.jmeter.configuration.JMeterProcessJVMSettings</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all JMeter Process JVM settings.</description>
        </parameter>
        <parameter>
          <name>logsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter logs are saved to.</description>
        </parameter>
        <parameter>
          <name>overrideRootLogLevel</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set a root log level to override all log levels used by JMeter Valid log levels are: ERROR, WARN, INFO, DEBUG (They are not case sensitive); If you try to set an invalid log level it will be ignored</description>
        </parameter>
        <parameter>
          <name>postTestPauseInSeconds</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set a pause in seconds after each test that is run.</description>
        </parameter>
        <parameter>
          <name>projectBuildDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>proxyConfig</name>
          <type>com.lazerycode.jmeter.configuration.ProxyConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all proxy configurations.</description>
        </parameter>
        <parameter>
          <name>remoteConfig</name>
          <type>com.lazerycode.jmeter.configuration.RemoteConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Value class that wraps all remote configurations.</description>
        </parameter>
        <parameter>
          <name>reportDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter reports are saved to.</description>
        </parameter>
        <parameter>
          <name>resultsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter results are saved to.</description>
        </parameter>
        <parameter>
          <name>resultsFileNameDateFormat</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the format of the timestamp that is appended to the results filename. (This assumes that testResultsTimestamp is set to &apos;true&apos;) For formatting see http://joda-time.sourceforge.net/apidocs/org/joda/time/format/DateTimeFormat.html</description>
        </parameter>
        <parameter>
          <name>scanResultsForFailedRequests</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets whether ResultScanner should search for failed requests in the JMeter result file. Defaults to false</description>
        </parameter>
        <parameter>
          <name>scanResultsForSuccessfulRequests</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets whether ResultScanner should search for Successful requests in the JMeter result file. Defaults to false</description>
        </parameter>
        <parameter>
          <name>skipTests</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Skip the JMeter tests</description>
        </parameter>
        <parameter>
          <name>suppressJMeterOutput</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Suppress JMeter output</description>
        </parameter>
        <parameter>
          <name>testConfigFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The filename used to store the results config</description>
        </parameter>
        <parameter>
          <name>testFilesBuildDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set the directory that JMeter test files are copied into as part of the build.</description>
        </parameter>
        <parameter>
          <name>testFilesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path under which JMX files are stored.</description>
        </parameter>
        <parameter>
          <name>testFilesExcluded</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the list of exclude patterns to use in directory scan for JMX files. Relative to testFilesDirectory.</description>
        </parameter>
        <parameter>
          <name>testFilesIncluded</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the list of include patterns to use in directory scan for JMX files. Relative to testFilesDirectory.</description>
        </parameter>
        <parameter>
          <name>testResultsTimestamp</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Timestamp the test results.</description>
        </parameter>
        <parameter>
          <name>useMavenProxy</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use maven proxy configuration if no specific proxy configuration provided</description>
        </parameter>
      </parameters>
      <configuration>
        <appendResultsTimestamp implementation="boolean" default-value="false"/>
        <confFilesDirectory implementation="java.io.File" default-value="${basedir}/src/test/conf"/>
        <generateReports implementation="boolean" default-value="true"/>
        <ignoreResultFailures implementation="boolean" default-value="false"/>
        <jmeterDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter"/>
        <logsDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/logs"/>
        <postTestPauseInSeconds implementation="java.lang.String" default-value="0"/>
        <projectBuildDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <reportDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/reports"/>
        <resultsDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/results"/>
        <scanResultsForFailedRequests implementation="boolean" default-value="true"/>
        <scanResultsForSuccessfulRequests implementation="boolean" default-value="true"/>
        <skipTests implementation="boolean" default-value="${skipTests}"/>
        <suppressJMeterOutput implementation="boolean" default-value="false"/>
        <testConfigFile implementation="java.lang.String" default-value="${project.build.directory}/config.json"/>
        <testFilesBuildDirectory implementation="java.io.File" default-value="${project.build.directory}/jmeter/testFiles"/>
        <testFilesDirectory implementation="java.io.File" default-value="${basedir}/src/test/jmeter"/>
        <testResultsTimestamp implementation="boolean" default-value="true"/>
      </configuration>
    </mojo>
  </mojos>
</plugin>